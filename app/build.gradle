apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
    signingConfigs {
        config {
            keyAlias 'Jason'
            keyPassword 'xsw123'
            storeFile file('/home/jason/Android/android.jks')
            storePassword 'zaq123'
        }
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.github.runningforlife.photosniffer"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        multiDexEnabled true
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    // lean cloud: 重复打包
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
    }
    lintOptions {
        abortOnError false
    }
}

configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute module('org.apache.commons:commons-io:1.3.2') with module('commons-io:commons-io:1.3.2')
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile("com.android.support.test.espresso:espresso-core:${rootProject.ext.espressoVersion}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:design:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
    testCompile "junit:junit:${rootProject.ext.junitVersion}"
    androidTestCompile "org.mockito:mockito-android:${rootProject.ext.mockitoVersion}"
    testCompile "org.mockito:mockito-core:${rootProject.ext.mockitoVersion}"

    compile "us.codecraft:webmagic-core:${rootProject.ext.webmagicVersion}"
    compile "com.squareup.okhttp3:okhttp:${rootProject.ext.okhttpVersion}"
    compile "com.jakewharton:butterknife:${rootProject.ext.butterknifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.ext.butterknifeVersion}"
    annotationProcessor "com.github.bumptech.glide:compiler:${rootProject.ext.glideVersion}"
    compile "com.github.bumptech.glide:glide:${rootProject.ext.glideVersion}"
    compile "com.github.bumptech.glide:okhttp3-integration:${rootProject.ext.glideVersion}"
    // LeanCloud 基础包
    compile "cn.leancloud.android:avoscloud-sdk:${rootProject.ext.avoscloudVersion}"
    // photo picker
    compile project(":photopicker")

    compile "com.nineoldandroids:library:${rootProject.ext.nineoldandroidsVersion}"
    // memory leak
    debugCompile "com.squareup.leakcanary:leakcanary-android:${rootProject.ext.leakcanaryVersion}"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${rootProject.ext.leakcanaryVersion}"
}
